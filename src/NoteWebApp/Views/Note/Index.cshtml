@using NoteWebApp.Models
@model NoteWebApp.ViewModels.NoteIndexVM

@{
    ViewBag.Title = "Index";

    List<Note> noteList = Model.NoteList;
    Note note = Model.SelectedNote;
    var order = ViewBag.order;
    string desc = "Notedate&orderType=Desc";
}

<style>
    .partViewList {
        margin-top: 15px;
        overflow-y: scroll;
        height: calc(100% - 120px);
        overflow-x: hidden;
    }

    #noteOrderBy {
        margin-bottom: 5px;
    }

    #pageTitle {
        color: #878787;
        display: block;
        vertical-align: top;
        font-size: 21px;
        letter-spacing: 0.5px;
        text-transform: uppercase;
        font-family: gotham, helvetica, arial, sans-serif;
        font-weight: 300;
        line-height: 26px;
        padding: 24px 20px 0 24px;
    }

    #countNotes, .alarm {
        font-family: gotham, helvetica, arial, sans-serif;
        font-size: 13px;
        font-weight: 400;
        color: #ababab;
        padding: 24px 20px 0 24px;
        display: inline-block;
    }

    .listConfig {
        margin-left: 150px;
        cursor: pointer;
        display: inline;
        font-family: gotham, helvetica, arial, sans-serif;
        font-size: 13px;
        font-weight: 400;
        color: #878787;
    }

    .select-hide {
        display: none;
    }

    .customOption {
        padding: 9px 54px 10px 20px;
        background-size: 12px 12px
    }

    .select-items {
        font-family: gotham, helvetica, arial, sans-serif;
        font-size: 13px;
        font-weight: 500;
        z-index: 100;
        background: #fff;
        border: 3px solid rgba(217, 217, 217, 0.4);
        border-top: 1px solid rgba(217, 217, 217, 0.4);
        border-left: 1px solid rgba(217, 217, 217, 0.4);
        box-shadow: 0px 6px 20px rgba(0, 0, 0, 0.04), -6px 8px 15px rgba(0, 0, 0, 0.04), 6px 8px 15px rgba(0, 0, 0, 0.04);
        padding: 12px 0;
        margin-top: 4px;
        color: #606060;
        position: fixed;
        box-sizing: border-box;
        margin-left: 100px;
    }

        .select-items div:hover, .same-as-selected {
            background-color: #2dbe60;
            color: #fff;
            padding: 9px 54px 10px 20px;
            background-size: 12px 12px
        }

    .configContainer {
        display: inline;
    }

    #noteDetail {
        width: calc(100% - 400px);
        height: 90%
    }
</style>


<div class="noteList">

    <div id="pageTitle">노트</div>
    <div id="countNotes">@noteList.Count 개의 노트</div>


    <div class="configContainer"></div>
    <div class="custom-select">
        @using (Html.BeginForm("Index", "Note", FormMethod.Get))
        {
            @Html.DropDownList("orderColumn", new SelectListItem[]{

            new SelectListItem() { Text = "만든날짜(최근 순으로)", Value = { "Notedate", "orderType" } },
            new SelectListItem() { Text = "만든날짜(오래된 순으로)", Value =  "Notedate"},
            new SelectListItem() { Text = "제목(내림차순)", Value = "Title"},
            new SelectListItem() { Text = "제목(오름차순)", Value = "Title"}
           }, new { onchange = "form.submit();" } )
        }
    </div>

    <div class="partViewList">
        @{ Html.RenderPartial("ShowNoteList", noteList); }
    </div>

</div>



<div id="noteDetail">
    @{ Html.RenderAction("Detail", new { selectedNoteid = noteList[0].NoteId }); }
</div>



<script>

    function test() {
        alert('test');
        $('#orders').submit();
    }

    @*var listUrl = '@Url.Action("NoteList", "Note")';

    window.callList();

    function callList(val) {
        $('.noteList').load(listUrl);
    }*@
        function callList(val) {
            
    }

</script>