
@{
    ViewBag.Title = "Create";
    var newNoteId = NoteWebApp.Models.NoteManager.NewestNote(); //가장최근거.
    //새로생성

}
<style>
    /*포지션 relative여야됨.*/
    .custom-select {
        position: relative;
        width: 30%;
    }

        .custom-select select {
            display: none; /*본래 오리지널 요소 감춤*/
        }

    .select-selected {
        background-color: #fff; /*선택되어있는 요소 배경색*/
        color: #fff;
    }

    /*옵션창 전체:글자 회색, 박스내부 간격, 커서*/
    .select-items div, .select-selected {
        color: gray;
        padding: 8px 16px;
        cursor: pointer;
        background-color: #fff;
    }
    /*옵션 아이템들:*/
    .select-items {
        display: inline;
        position: absolute;
        background-color: #fff;
        top: 100%;
        left: 0;
        right: 0;
        z-index: 99; /*다른 요소들 위로 오게*/
    }

    .select-hide {
        display: none;
    }

    .select-items div:hover, .same-as-selected {
        background-color: #2dbe60;
        color: #fff;
    }

    .BookDropdown {
        display: inline;
    }

    /*저장버튼*/
    .saveButton {
        background-color: #2dbe60;
        color: #fff;
        border: 1px solid #2dbe60;
        border-radius: 4px;
        cursor: pointer;
        display: inline;
        float: right;
        outline: none;
        height: 28px;
        box-sizing: border-box;
        padding: 0 15px;
        vertical-align: top;
    }
</style>

@using (Html.BeginForm("Update", "Note"))
{<input type="hidden" name="noteid" value=@newNoteId>
    <input class="saveButton" type="submit" value="저장" />
    <div class="BookDropdown">
        <div class="custom-select">@Html.DropDownList("noteBookId")</div>
    </div>
    <div>
        <br />
        @Html.TextBox("title", "", new { placeholder = "노트 제목 지정", maxlength = 15, onkeyUp = "lengthAlert()", autofocus = "autofocus" })
    </div>
    <div id="msg"></div>
    <div>
        <br />
        <textarea name="contents"></textarea>
    </div>

}


<script>
    //var isNewNote = 1; //새노트인가? true
    var isNewNote = 1;
   
    $(document).ready(function () {
        CKEDITOR.replace('contents',
            {
                fullPage: true,
                filebrowserImageUploadUrl: '../Handler/Upload.ashx'
            }).on('key', function () {
                 if (isNewNote == 1) {
                    $.ajax({
                        url: 'Insert',
                        data: {
                            title: document.getElementsByName('title')[0].value,
                            contents: this.getData(),
                            noteBookId: originalOption.options[originalOption.selectedIndex].value
                        }
                    }).done(function () {
                        isNewNote = 0;
                        console.log('inserted', isNewNote);
                    });
                 } else if (isNewNote == 0) {
                      var NewNoteId = @NoteWebApp.Models.NoteManager.NewestNote();;
                    $.ajax({
                        url: 'Update',
                        data: {
                            title: document.getElementsByName('title')[0].value,
                            contents: this.getData(),
                            noteBookId: originalOption.options[originalOption.selectedIndex].value,
                            noteid: NewNoteId + 1
                        }
                    }).done(function () {
                        console.log('Updated', isNewNote);
                    });
                }



            });
    });


    function lengthAlert() {
        var length = document.getElementById("title").value.length;
        if (length > 15) {
            document.getElementById("msg").innerHTML = "제목은 15자 이내로 작성해주세요.";
        } else {
            document.getElementById("msg").innerHTML = "";
        }
    }

    var originalDropDown, i, j, originalOption, a, b, c;
    /*오리지널 드롭다운 찾기*/
    originalDropDown = document.getElementsByClassName("custom-select");
    for (i = 0; i < originalDropDown.length; i++) {
        originalOption = originalDropDown[i].getElementsByTagName("select")[0];
        /*select-selected 클래스 div를 새로 만들고 오리지널옵션에서 선택된 값을 select-selected에 넣는다.*/
        a = document.createElement("DIV");
        a.setAttribute("class", "select-selected");
        a.innerHTML = originalOption.options[originalOption.selectedIndex].innerHTML;
        /*오리지널 드롭다운에 select-selected를 넣는다.*/
        originalDropDown[i].appendChild(a);
        /*b: select-items select-hide 클래스 div를 새로 만든다.*/
        b = document.createElement("DIV");
        b.setAttribute("class", "select-items select-hide");
        
        for (j = 0; j < originalOption.length; j++) {
            /*c: div 요소를 새로 만들어서 오리지널 옵션의 내용을 넣는다.*/
            c = document.createElement("DIV");
            c.innerHTML = originalOption.options[j].innerHTML;
            c.addEventListener("click", function (e) {
                /*아이템을 클릭하면, 오리지널이랑 복제된 옵션의 선택값을 바꾼다.:*/
                var y, i, k, s, h;
                s = this.parentNode.parentNode.getElementsByTagName("select")[0]; //c의 옵션들 찾기
                h = this.parentNode.previousSibling;
                for (i = 0; i < s.length; i++) {
                    if (s.options[i].innerHTML == this.innerHTML) {
                        s.selectedIndex = i;
                        h.innerHTML = this.innerHTML;
                        y = this.parentNode.getElementsByClassName("same-as-selected");
                        for (k = 0; k < y.length; k++) {
                            y[k].removeAttribute("class");
                        }
                        this.setAttribute("class", "same-as-selected");
                        break;
                    }
                }
                h.click();
            });
            b.appendChild(c);
        }
        originalDropDown[i].appendChild(b);
        a.addEventListener("click", function (e) {
            /*셀렉박스가 클릭되면 다른 셀렉박스들은 닫는다. 그리고 현재 박스를 열거나 닫음 (토글로)*/
            e.stopPropagation();
            closeAllSelect(this);
            this.nextSibling.classList.toggle("select-hide");
            this.classList.toggle("select-arrow-active");
        });
    }
    function closeAllSelect(elmnt) {
        /*현재 선택된 박스 이외의 문서의 다른 셀렉박스들을 닫는 기능:*/
        var x, y, i, arrNo = [];
        x = document.getElementsByClassName("select-items"); //새드롭다운옵션들
        y = document.getElementsByClassName("select-selected");//새드롭다운선택
        for (i = 0; i < y.length; i++) {
            if (elmnt == y[i]) {
                arrNo.push(i)
            } else {
              //  y[i].classList.remove("select-arrow-active");
            }
        }
        for (i = 0; i < x.length; i++) {
            if (arrNo.indexOf(i)) {
                x[i].classList.add("select-hide");
            }
        }
    }
    /*만약 셀렉박스 이외 다른 곳 선택하면 해당 박스를 닫음.*/
    document.addEventListener("click", closeAllSelect);


</script>



<asp:TextBox ID="txtCkEditor" TextMode="MultiLine" runat="server"></asp:TextBox>


